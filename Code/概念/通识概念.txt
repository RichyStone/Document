一、装箱 拆箱
如果两种类型存在继承关系，有继承关系才有可能发生拆装箱；
把值类型转换为引用类型叫装箱；
把引用类型转换为值类型叫拆箱；
使用泛型集合减少装箱和拆箱

二、托管式内存和非托管式内存
托管式内存就是后台会自动清理的内存；
非托管式内存就是需要主动清理的内存；
参考资料网址：
https://www.cnblogs.com/xwdreamer/archive/2013/03/21/2973241.html

三、深拷贝与浅拷贝
浅拷贝是指当对象的字段值被拷贝时，字段引用的对象不会被拷贝。例如，如果一个对象有一个指向字符串的字段，并且我们对该对象做了一个浅拷贝，那么这两个对象将引用同一个字符串，而深拷贝是对对象实例中字段引用的对象也进行拷贝，如果一个对象有一个指向字符串的字段，并且我们对该对象进行了深拷贝的话，那么我们将创建一个对象和一个新的字符串，新的对象将引用新的字符串。也就是说，执行深拷贝创建的新对象和原来对象不会共享任何东西，改变一个对象对另外一个对象没有任何影响，而执行浅拷贝创建的新对象与原来对象共享成员，改变一个对象，另外一个对象的成员也会改变。

四、并发和并行

1.并发和并行
并发：当有多个线程在操作时,如果系统只有一个CPU,则它根本不可能真正同时进行一个以上的线程，它只能把CPU运行时间划分成若干个时间段,再将时间 段分配给各个线程执行，在一个时间段的线程代码运行时，其它线程处于挂起状。.这种方式我们称之为并发(Concurrent)。

并行：当系统有一个以上CPU时,则线程的操作有可能非并发。当一个CPU执行一个线程时，另一个CPU可以执行另一个线程，两个线程互不抢占CPU资源，可以同时进行，这种方式我们称之为并行(Parallel)。

区别：并发和并行是即相似又有区别的两个概念，并行是指两个或者多个事件在同一时刻发生；而并发是指两个或多个事件在同一时间间隔内发生。在多道程序环境下，并发性是指在一段时间内宏观上有多个程序在同时运行，但在单处理机系统中，每一时刻却仅能有一道程序执行，故微观上这些程序只能是分时地交替执行。倘若在计算机系统中有多个处理机，则这些可以并发执行的程序便可被分配到多个处理机上，实现并行执行，即利用每个处理机来处理一个可并发执行的程序，这样，多个程序便可以同时执行。[2]

2.并行和串行：

串行：一次只能取得一个任务并执行这一个任务

并行：可以同时通过多进程/多线程的方式取得多个任务，并以多进程或多线程的方式同时执行这些任务
注意点：
如果是单进程/单线程的并行，那么效率比串行更差
如果只有单核cpu，多进程并行并没有提高效率
从任务队列上看，由于同时从队列中取得多个任务并执行，相当于将一个长任务队列变成了短队列

3.并发：
并发是一种现象：同时运行多个程序或多个任务需要被处理的现象
这些任务可能是并行执行的，也可能是串行执行的，和CPU核心数无关，是操作系统进程调度和CPU上下文切换达到的结果
解决大并发的一个思路是将大任务分解成多个小任务：
可能要使用一些数据结构来避免切分成多个小任务带来的问题
可以多进程/多线程并行的方式去执行这些小任务达到高效率
或者以单进程/单线程配合多路复用执行这些小任务来达到高效率

参考资料网址：
https://zhuanlan.zhihu.com/p/383279972