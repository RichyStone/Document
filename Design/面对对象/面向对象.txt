OOP（Object-Oriented Programming）

一、对象的定义

对象是一种程序单元。
对象的意义：
1.降低了熵
2.隐藏了实现
3.抽象了概念
4.承担了职责
5.提供了功能
6.封装了信息

二、三大特性

1、封装 封装是为了防止对实现细节的访问，把写好的代码放入一个包装里，
使用者可以不考虑实现细节直接使用，也防止使用者对实现细节的破坏。

2、继承主要实现重用代码，节省开发时间，根据一个类来定义另一个类，子类继承了父类的属性和方法，但是子类并没有继承父类的私有字段。
1）继承的单根性：一个子类只能有一个父类。
2）继承的传递性

3.多态

多态性（polymorphism）是允许你将父对象设置成为和一个或更多的他的子对象相等的技术，赋值之后，父对象就可以根据当前赋值给它的子对象的特性以不同的方式运作。
这就意味着虽然针对不同对象的具体操作不同，但通过一个公共的类，它们的操作可以通过相同的方式予以调用。

实现多态，有两种种方式，覆盖，重载。
覆盖，是指子类重新定义父类的虚函数的做法。
重载，是指允许存在多个同名函数，而这些函数的参数表不同（或许参数个数不同，或许参数类型不同，或许两者都不同）。

三、错误的对象认识

对象=实物	简单化，机械化
对象=数据
滥用继承
过度多态	恐惧过程式代码

四、对象设计原则

设计对象从对象的行为出发，相对于从对象的数据出发要更合适。
面向对象设计原则：
对接口编程而不是对实现编程。
优先使用对象组合而不是继承。

五、设计对象的切入点

职责
协作

六、快速设计对象的方法

把对象想象成人，设计对象，就是给人分配任务。

只能负责一件事情
可以再分配任务给别人
有记忆力
数量很多
